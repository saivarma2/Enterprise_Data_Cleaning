{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sai Varma\\\\Desktop\\\\Enterprise_Data_Cleaning\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// Enterprise_Data_Cleaning/frontend/src/App.js\nimport React, { useState } from 'react';\nimport FileUpload from './components/FileUpload';\nimport ReportGeneration from './components/ReportGeneration';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [filePath, setFilePath] = useState('');\n\n  // Pass a callback to update the filePath when file is successfully uploaded/cleaned.\n  const handleFileUploadSuccess = path => {\n    setFilePath(path);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Enterprise Data Cleaning and Reporting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n      onUploadSuccess: handleFileUploadSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), filePath && /*#__PURE__*/_jsxDEV(ReportGeneration, {\n      filePath: filePath\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tDyGvMb3jwoiRUFyLp7N6T9zmbw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","FileUpload","ReportGeneration","jsxDEV","_jsxDEV","App","_s","filePath","setFilePath","handleFileUploadSuccess","path","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onUploadSuccess","_c","$RefreshReg$"],"sources":["C:/Users/Sai Varma/Desktop/Enterprise_Data_Cleaning/frontend/src/App.js"],"sourcesContent":["// Enterprise_Data_Cleaning/frontend/src/App.js\r\nimport React, { useState } from 'react';\r\nimport FileUpload from './components/FileUpload';\r\nimport ReportGeneration from './components/ReportGeneration';\r\n\r\nfunction App() {\r\n  const [filePath, setFilePath] = useState('');\r\n\r\n  // Pass a callback to update the filePath when file is successfully uploaded/cleaned.\r\n  const handleFileUploadSuccess = (path) => {\r\n    setFilePath(path);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Enterprise Data Cleaning and Reporting</h1>\r\n      <FileUpload onUploadSuccess={handleFileUploadSuccess} />\r\n      {/* Only show report generation if a filePath is available */}\r\n      {filePath && <ReportGeneration filePath={filePath} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,gBAAgB,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,MAAMS,uBAAuB,GAAIC,IAAI,IAAK;IACxCF,WAAW,CAACE,IAAI,CAAC;EACnB,CAAC;EAED,oBACEN,OAAA;IAAKO,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBR,OAAA;MAAAQ,QAAA,EAAI;IAAsC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/CZ,OAAA,CAACH,UAAU;MAACgB,eAAe,EAAER;IAAwB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEvDT,QAAQ,iBAAIH,OAAA,CAACF,gBAAgB;MAACK,QAAQ,EAAEA;IAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV;AAACV,EAAA,CAhBQD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AAkBZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}